{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"gNAiCeA,EA7BD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKhC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACvC,OAAO,0BAAMC,MAAO,CAClBC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OACRC,IAAKP,EAAGJ,MACRI,EAAGJ,KAPC,KAOOI,EAAGH,OAPV,QAUT,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,EAAjB,KACA,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,wBCpB9DC,E,kLAGFC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MASb,OARKL,KAAKxB,MAAM8B,UACdF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAAK,OAClC,kBAAC,EAAD,CACEgB,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAIjB,6BACGO,O,GAlBYI,aAuCNC,uBAfS,SAAAC,GACtB,MAAO,CACLN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAII,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI3DM,CAA6CK,YAAiBf,EAAQgB,O,mBC/CrFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.64cf3b42.chunk.js","sourcesContent":["/*eslint-disable*/\r\nimport React from 'react';\r\nimport classes from './Order.css'\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push(\r\n      {\r\n        name: ingredientName,\r\n        amount: props.ingredients[ingredientName]\r\n      }\r\n    )\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return <span style={{\r\n      textTransform: 'capitalize',\r\n      display: 'inline-block',\r\n      margin: '0 8px',\r\n      border: '1px solid #ccc',\r\n      padding: '5px'\r\n    }} key={ig.name}>\r\n      {ig.name} ({ig.amount})</span>\r\n  })\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingrediends: {ingredientOutput} </p>\r\n      <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>);\r\n};\r\n\r\nexport default order;","/*eslint-disable*/\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from '../../axios-order'\r\nimport Order from '../../components/Order/Order'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price} />\r\n      ))\r\n    }\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order___4yi4Z\"};"],"sourceRoot":""}