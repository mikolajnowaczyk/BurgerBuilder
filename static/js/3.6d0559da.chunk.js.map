{"version":3,"sources":["containers/Checkout/ContactData/ContactData.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.css"],"names":["ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","adress","postalCode","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","ingredients","props","ings","price","orderData","userId","console","log","onOrderBurger","token","inputChangedHandler","inputIdentyfier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","inputIdentifier","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","Input","invalid","shouldValidate","changed","Button","btnType","disabled","clicked","loading","Spinner","className","classes","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","checkoutSummary","CheckoutSummary","style","width","margin","Burger","checkoutCancelled","checkoutContinued","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component","input","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","Label","label","module","exports"],"mappings":"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","file":"static/js/3.6d0559da.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\n/*eslint-disable */\r\nimport React, { Component } from 'react'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from \"./ContactData.css\";\r\nimport axios from \"../../../axios-order\";\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from \"../../../components/UI/Input/Input\"\r\nimport { connect } from 'react-redux'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index'\r\nimport { updateObject, checkValidity } from '../../../shared/utility'\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Zip code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 8\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your E-Mail'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' }\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true\r\n      },\r\n    },\r\n    name: '',\r\n    email: '',\r\n    adress: {\r\n      street: '',\r\n      postalCode: ''\r\n    },\r\n    formIsValid: false\r\n  }\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementId in this.state.orderForm) {\r\n      formData[formElementId] = this.state.orderForm[formElementId].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    }\r\n    console.log(order)\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentyfier) => {\r\n    const updatedFormElement = updateObject(this.state.orderForm[inputIdentyfier], {\r\n      value: event.target.value,\r\n      valid: checkValidity(event.target.value, this.state.orderForm[inputIdentyfier].validation),\r\n      touched: true\r\n    });\r\n    const updatedOrderForm = updateObject(this.state.orderForm, {\r\n      [inputIdentyfier]: updatedFormElement\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      })\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid} clicked={this.orderHandler}>ORDER</Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(withErrorHandler(ContactData, axios));","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: '100%', margin: 'auto' }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button\r\n        btnType=\"Danger\"\r\n        clicked={props.checkoutCancelled}>CANCEL</Button>\r\n      <Button\r\n        btnType=\"Success\"\r\n        clicked={props.checkoutContinued}>CONTINUE</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default checkoutSummary;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport ContactData from './ContactData/ContactData'\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport { connect } from 'react-redux'\r\n//import * as actions from '../../store/actions/index'\r\n\r\nclass Checkout extends Component {\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data')\r\n  }\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-data\"}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","/*eslint-disable */\r\nimport React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n  switch (props.elementType) {\r\n    case (\"input\"):\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('textarea'):\r\n      inputElement = <textarea\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n      break;\r\n    case ('select'):\r\n      inputElement = <select\r\n        className={inputClasses.join(' ')}\r\n        value={props.value}\r\n        onChange={props.changed}>\r\n        {\r\n          props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))\r\n        }\r\n      </select>;\r\n      break;\r\n    default:\r\n      inputElement = <input\r\n        className={inputClasses.join(' ')}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.changed} />;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input___s67N0\",\"Label\":\"Input__Label____n-1m\",\"InputElement\":\"Input__InputElement___2-aFx\",\"Invalid\":\"Input__Invalid___1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData___1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary___1xBm4\"};"],"sourceRoot":""}